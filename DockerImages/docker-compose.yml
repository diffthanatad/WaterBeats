version: '3'
services:
  database:
    image: "postgres:14"
    container_name: postgres14-waterbeats
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: waterbeats
    volumes:
      - ./postgres_database_schema.sql:/docker-entrypoint-initdb.d/postgres_database_schema.sql
    ports:
      - "5432:5432"
  proxy-server:
    image: "diffs/ucl-waterbeats:auth-gateway_1.0.3"
    container_name: waterbeats-auth-gateway
    environment:
      JWT_SECRET: Thursday2March2023
      DATABASE_URL: postgres://user:pass@postgres14-waterbeats/waterbeats
      CLIENT_ORIGIN: http://localhost:8080/
      BACKEND_URL: http://data-backend:8888/
    ports:
      - "9091:9091"
    depends_on:
      - database
  data-backend:
    build:
      context: ../DataBackend
      dockerfile: "DataBackendInit.Dockerfile"
    container_name: data-backend
    environment:
      RUST_LOG: "DEBUG"
      WB_ADDRESS: "0.0.0.0:8888"
      INFLUXDB_HOST: "http://influxdb:8086"
      BASE_URL: "http://influxdb:8086"
    ports:
      - "8888:8888"
    depends_on:
      - influxdb
      - influxdb_init
    volumes:
      - ../TSDB:/scripts
    command: bash -c 'export INFLUXDB_TOKEN=$$(python3 /scripts/create_token.py | tail -n 1) && data_backend'
  influxdb:
    image: "influxdb:2.6.1"
    container_name: influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: "setup"
      DOCKER_INFLUXDB_INIT_USERNAME: "WaterBeats"
      DOCKER_INFLUXDB_INIT_PASSWORD: "WaterBeats"
      DOCKER_INFLUXDB_INIT_ORG: "WaterBeats"
      DOCKER_INFLUXDB_INIT_BUCKET: "WaterBeats"
    ports:
      - "8086:8086"
  influxdb_init:
    image: python:3
    container_name: influxdb_init
    environment:
      BASE_URL: "http://influxdb:8086"
    volumes:
      - ../TSDB:/scripts
    command: bash -c 'pip install requests && export INFLUXDB_TOKEN=$$(python /scripts/create_token.py | tail -n 1) && python /scripts/init_data.py && echo INFLUXDB_TOKEN=$$INFLUXDB_TOKEN > /scripts/token.tmp'
    depends_on:
      - influxdb


# Command to use for running this docker compose file
# $ docker-compose up
# $ docker-compose down --volumes --remove-orphans